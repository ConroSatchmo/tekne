{
	"name": "simpsonflow",
	"properties": {
		"folder": {
			"name": "simpson"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "entrada_simpsons_characters",
						"type": "DatasetReference"
					},
					"name": "sourcesimpsoncharacters"
				},
				{
					"dataset": {
						"referenceName": "entrada_simpsons_episodes",
						"type": "DatasetReference"
					},
					"name": "sourcesimpsonepisodes"
				},
				{
					"dataset": {
						"referenceName": "entrada_simpsons_locations",
						"type": "DatasetReference"
					},
					"name": "sourcesimpsonlocations"
				},
				{
					"dataset": {
						"referenceName": "entrada_simpsons_script_lines",
						"type": "DatasetReference"
					},
					"name": "sourcesimpsonscriptlines"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "salida_simpson_csv",
						"type": "DatasetReference"
					},
					"name": "destinosimpsons"
				},
				{
					"dataset": {
						"referenceName": "salida_scriptlines_parquet",
						"type": "DatasetReference"
					},
					"name": "destinoscripts"
				}
			],
			"transformations": [
				{
					"name": "selectcharacters"
				},
				{
					"name": "filternull"
				},
				{
					"name": "selectepisodes"
				},
				{
					"name": "joinsfilternullselectepisodes"
				},
				{
					"name": "selectjoinchractersepisodes"
				},
				{
					"name": "join"
				},
				{
					"name": "selectlocations"
				}
			],
			"scriptLines": [
				"source(output(",
				"          id as integer,",
				"          name as string,",
				"          normalized_name as string,",
				"          gender as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sourcesimpsoncharacters",
				"source(output(",
				"          id as integer,",
				"          image_url as string,",
				"          imdb_rating as string,",
				"          imdb_votes as string,",
				"          number_in_season as string,",
				"          number_in_series as string,",
				"          original_air_date as string,",
				"          original_air_year as string,",
				"          production_code as string,",
				"          season as string,",
				"          title as string,",
				"          us_viewers_in_millions as string,",
				"          video_url as string,",
				"          views as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sourcesimpsonepisodes",
				"source(output(",
				"          id as integer,",
				"          name as string,",
				"          normalized_name as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sourcesimpsonlocations",
				"source(output(",
				"          id as string,",
				"          episode_id as string,",
				"          number as string,",
				"          raw_text as string,",
				"          timestamp_in_ms as string,",
				"          speaking_line as string,",
				"          character_id as string,",
				"          location_id as string,",
				"          raw_character_text as string,",
				"          raw_location_text as string,",
				"          spoken_words as string,",
				"          normalized_text as string,",
				"          word_count as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> sourcesimpsonscriptlines",
				"sourcesimpsoncharacters select(mapColumn(",
				"          id,",
				"          name = normalized_name,",
				"          gender",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectcharacters",
				"selectcharacters filter(gender !='NULL') ~> filternull",
				"sourcesimpsonepisodes select(mapColumn(",
				"          id,",
				"          imdb_rating,",
				"          number_in_season,",
				"          original_air_date,",
				"          production_code,",
				"          season,",
				"          title,",
				"          us_viewers_in_millions,",
				"          video_url,",
				"          views",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectepisodes",
				"filternull, selectepisodes join(selectcharacters@id == selectepisodes@id,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinsfilternullselectepisodes",
				"joinsfilternullselectepisodes select(mapColumn(",
				"          id = selectcharacters@id,",
				"          name,",
				"          gender,",
				"          id = selectepisodes@id,",
				"          imdb_rating,",
				"          number_in_season,",
				"          original_air_date,",
				"          production_code,",
				"          season,",
				"          title,",
				"          us_viewers_in_millions,",
				"          video_url,",
				"          views",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectjoinchractersepisodes",
				"selectjoinchractersepisodes, sourcesimpsonlocations join(selectjoinchractersepisodes@id == sourcesimpsonlocations@id,",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join",
				"sourcesimpsonlocations select(mapColumn(",
				"          id,",
				"          name = normalized_name",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> selectlocations",
				"join sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Tabla as string,",
				"          Uso as string",
				"     ),",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> destinosimpsons",
				"sourcesimpsonscriptlines sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          CHROM as string,",
				"          POS as long,",
				"          ID as string,",
				"          REF as string,",
				"          ALT as string,",
				"          QUAL as double,",
				"          FILTER as string,",
				"          INFO as string,",
				"          FORMAT as string,",
				"          MUESTRA as long,",
				"          VALOR as string,",
				"          ORIGEN as string,",
				"          FECHA_COPIA as timestamp,",
				"          RESULTADO as string",
				"     ),",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> destinoscripts"
			]
		}
	}
}